contract Roles_Del {
    data {
        role_id int
    }

    conditions {
        // check role
        $role_map = DBFind("roles_list").Where("id=$", $role_id).Row()
        if ($role_map["id"] == nil) {
            warning "Role not found"
        }

        // system role can not be deleted
        if (Int($role_map["role_type"]) == 3) {
            warning "System role can not be removed"
        }

        // check creator of the role
        if (Int($role_map["creator_id"]) != $key_id) {
            warning "Sorry, you are not the creator of this role"
        }
    }

    action {
        // get the list of participants
        $ret_assign = DBFind("roles_assign").Columns("id").Where("role_id = $ and delete = $", $role_id, 0).Order("id")

        // delete all participants
        $len_assign = Len($ret_assign)
        $i_assign = 0
        while ($i_assign < $len_assign) {
            $vals_assign = $ret_assign[$i_assign]
            Roles_Unassign("row_id", Int($vals_assign["id"]))
            $i_assign = $i_assign + 1
        }

        // delete the role
        DBUpdate("roles_list", $role_id, "delete,timestamp date_delete", 1, $block_time)
    }
}