{
    "pages": [
        {
            "Name": "statistics",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(Class: content-wrapper){\r\n    \r\n    SetTitle(Статистика)\r\n    \r\n    DBFind(Name: patent_applications, Source: src_applications).Order(\"id desc\").Limit(1).Vars(a)\r\n\r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n                        Div(row df f-valign){\r\n                                Div(col-md-5 mt-sm text-right h5){\r\n                                    Strong(Общее количество предварительных заявок:)\r\n                                }\r\n                                Div(col-md-6 mt-sm text-left h5){\r\n                                    Div(){\r\n                                        Span(#a_id#)\r\n                                    }\r\n                                }\r\n                            }            \r\n            \r\n            Div(Class: panel-footer clearfix){\r\n                Div(Class: pull-right){\r\n                    Button(Body:  Предварительные заявки, Class: btn btn-default, Page: court_view)                    \r\n                }\r\n            }\r\n        }\r\n    }"
        },
        {
            "Name": "give_application",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "SetVar(title,Передача заявки)\r\n\r\nIf(#appl_id#>0){}.Else{SetVar(appl_id, 1)}\r\n\r\nIf(GetVar(appl_id)){\r\n    DBFind(Name: patent_applications, Source: src_applications).WhereId(#appl_id#).Vars(app)\r\n}\r\n\r\nSetTitle(#title#)\r\n\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        Div(){\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(#title#, text-muted)\r\n        }\r\n    }\r\n    If(GetVar(appl_id)){\r\n        Div(row df f-valign){\r\n            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3 mt-sm text-left){\r\n                Div(panel panel-default){\r\n                    Form(){\r\n                        Div(Class: list-group-item text-center){\r\n                            Span(Class: h3, Body: Заявка №#appl_id# )\t\r\n                        }\r\n\r\n                            Div(row df f-valign){\r\n                                Div(col-md-5 mt-sm text-right h5){\r\n                                    Strong(Id заявки:)\r\n                                }\r\n                                Div(col-md-6 mt-sm text-left h5){\r\n                                    Div(){\r\n                                        Span(#app_id#)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            Div(row df f-valign){\r\n                                Div(col-md-5 mt-sm text-right h5){\r\n                                    Strong(Название:)\r\n                                }\r\n                                Div(col-md-6 mt-sm text-left h5){\r\n                                    Div(){\r\n                                        Span(#app_name#)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n\r\n                            Div(row df f-valign){\r\n                                Div(col-md-5 mt-sm text-right h5){\r\n                                    Strong(Описание:)\r\n                                }\r\n                                Div(col-md-6 mt-sm text-left h5){\r\n                                    Div(){\r\n                                        Span(#app_description#)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            Div(row df f-valign){\r\n                                Div(col-md-5 mt-sm text-right h5){\r\n                                    Strong(Дата:)\r\n                                }\r\n                                Div(col-md-6 mt-sm text-left h5){\r\n                                    Div(){\r\n                                        Span(#app_date_creation#)\r\n                                    }\r\n                                }\r\n                            }                            \r\n\r\n                            Div(row df f-valign){\r\n                             Div(col-md-5 mt-sm text-right){\r\n                                   Strong(Кому передать права:)\r\n                               }\r\n                             Div(col-md-6 mb-sm text-left){\r\n                                   DBFind(Name: members, Source: src_owners)\r\n                                   Select(Name: GiveId, Source: src_owners, ValueColumn: id, NameColumn: member_name, Class: form-control m-b)\r\n                               }\r\n                           }\r\n\r\n\r\n\r\n                            Div(Class: panel-footer clearfix){\r\n                              Div(Class: pull-right){\r\n                                  Button(Body:  Мои предварительные заявки, Class: btn btn-default, Page: u_application_list)    \r\n                                  Button(Body:  Передать права, Class: btn btn-primary, Contract: give_application, Params: appl_id=#appl_id#, Page: u_application_list)                    \r\n                                                  \r\n                              }\r\n                            }\r\n                           \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "roles_view",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\n    \n    If(#v_role_id# > 0){\n        \n        SetTitle($role$: #v_role_name#)\n        Div(Class: breadcrumb){\n            LinkPage($roles$, roles_list)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(Class: text-muted, Body: #v_role_name#)\n        }\n        \n        DBFind(Name: roles_assign, Source: src_roles_assign).Custom(custom_id){\n            If(#delete# == 0){\n                Span(Body: #id#)\n            }.Else{\n                Span(Class: text-muted, Body: #id#)\n            }\n        }.Custom(custom_appointed){\n            If(#delete# == 0){\n                Span(Body: #appointed_by_name#)\n            }.Else{\n                Span(Class: text-muted, Body: #appointed_by_name#)\n            }\n        }.Custom(custom_role_name){\n            If(#delete# == 0){\n                Span(Body: LangRes(#role_name#) )\n            }.Else{\n                Span(Class: text-muted, Body: LangRes(#role_name#))\n            }\n        }.Custom(custom_member){\n            If(#delete# == 0){\n                LinkPage(Page: profile_view, PageParams: \"v_member_id=#member_id#\"){\n                    If(#member_avatar# != \"\"){\n                        Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px; border: 1px solid #5A5D63; margin-right: 10px;)\n                    }\n                    Span(Class: h5 text-bold, Body: #member_name#)\n                }\n            }.Else{\n                Div(){\n                    If(#member_avatar# != \"\"){\n                        Image(Src: \"#member_avatar#\", Class: img-circle).Style(width: 30px; border: 1px solid #5A5D63; margin-right: 10px;)\n                    }\n                    Span(Class: h5 text-muted, Body: #member_name#)\n                }\n            }\n        }.Custom(custom_address){\n            If(#delete# == 0){\n                Span(Body: Address(#member_id#))\n            }.Else{\n                Span(Class: text-muted, Body: Address(#member_id#))\n            }\n        }.Custom(custom_type){\n            If(#delete# == 0){\n                Span(Body: EcosysParam(Name: roles_types, Index: #role_type#))\n            }.Else{\n                Span(Class: text-muted, Body: EcosysParam(Name: roles_types, Index: #role_type#))\n            }\n        }.Custom(custom_date){\n            If(#delete# == 0){\n                Div(Class: h6 m0, Body: DateTime(DateTime: #date_start#, Format: \"DD.MM.YYYY HH:MI\"))\n                Div(Class: h6 m0, Body: DateTime(DateTime: #date_end#, Format: \"DD.MM.YYYY HH:MI\"))\n            }.Else{\n                Div(Class: h6 m0 text-muted, Body: DateTime(DateTime: #date_start#, Format: \"DD.MM.YYYY HH:MI\"))\n                Div(Class: h6 m0 text-muted, Body: DateTime(DateTime: #date_end#, Format: \"DD.MM.YYYY HH:MI\"))\n            }\n        }.Custom(custom_status){\n            If(#delete# == 0){\n                Span(Body: LangRes(active))\n            }.Else{\n                Span(Class: text-muted, Body: LangRes(deleted))\n            }\n        }.Custom(actions){\n            If(#delete# == 0){\n                Div(Class: text-center, Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Roles_Unassign, Params: \"row_id=#id#\", Page: roles_view, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\"))\n            }\n        }.Where(\"role_id='#v_role_id#'\").Order(\"delete ASC, id ASC\")\n        \n        Div(Class: panel panel-primary){\n            Form(){\n                Div(Class: list-group-item){\n                    Table(Source: src_roles_assign, Columns: \"$id$=custom_id,$member$=custom_member,$member_id$=custom_address,$role$=custom_role_name,$type$=custom_type,$appointed$ / $deleted$=custom_date,$appointed$=custom_appointed,$status$=custom_status,$actions$=actions\")\n                }\n                Div(Class: panel-footer clearfix){\n                    Div(Class: pull-right){\n                        Button(Body: LangRes(assign), Class: btn btn-primary, Page: roles_assign, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\")\n                    }\n                }\n            }\n        }\n        \n    }.Else{\n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n    }\n    \n}"
        },
        {
            "Name": "roles_list",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($roles$)\n\tDiv(breadcrumb){\n\t\tSpan(Class: text-muted, Body: $roles$)\n\t}\n\n    If(GetVar(isSearch) == 1){\n        SetVar(Name: v_Where, Value: \"role_name='#v_Search#'\")\n    }.Else{\n        SetVar(Name: v_Where, Value: \"id>0\")\n        SetVar(Name: v_Search, Value: \"\")\n    }\n\n    DBFind(Name: roles_list, Source: src_roles_list).Custom(custom_id){\n        If(#delete# == 0){\n            Span(Body: #id#)  \n        }.Else{\n            Span(Class: text-muted, Body: #id#)\n        }\n    }.Custom(custom_creator){\n        If(#role_type#==3){\n            Div(){\n                Span(Class: h5, Body: LangRes(system_role))\n            }\n        }.Else{\n            If(#delete# == 0){\n                LinkPage(Page: profile_view, PageParams: \"v_member_id=#creator_id#\"){\n                    If(#creator_avatar# != \"\"){\n                        Image(Src: \"#creator_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n                    }\n                    Span(Class: h5 text-bold, Body: #creator_name#)\n                }\n            }.Else{\n                Div(){\n                    If(#creator_avatar# != \"\"){\n                        Image(Src: \"#creator_avatar#\", Class: img-circle).Style(width: 30px;  border: 1px solid #5A5D63; margin-right: 10px;)\n                    }\n                    Span(Class: h5 text-muted, Body: #creator_name#)\n                }\n            }\n        }\n    }.Custom(custom_name){\n        If(#delete# == 0){\n            LinkPage(Page: roles_view, PageParams: \"v_role_id=#id#,v_role_name=#role_name#\"){\n                Span(Class: h5 text-bold, Body: LangRes(#role_name#))\n            }\n        }.Else{\n            Span(Class: h5 text-muted, Body: LangRes(#role_name#))\n        }\n\t}.Custom(custom_date){\n        If(#delete# == 0){\n            Div(Class: h6 m0, Body: DateTime(DateTime: #date_create#, Format: \"DD.MM.YYYY HH:MI\"))\n            Div(Class: h6 m0, Body: DateTime(DateTime: #date_delete#, Format: \"DD.MM.YYYY HH:MI\"))\n        }.Else{\n            Div(Class: h6 m0 text-muted, Body: DateTime(DateTime: #date_create#, Format: \"DD.MM.YYYY HH:MI\"))\n            Div(Class: h6 m0 text-muted, Body: DateTime(DateTime: #date_delete#, Format: \"DD.MM.YYYY HH:MI\"))\n        }\n\t}.Custom(custom_type){\n        If(#delete# == 0){\n            Span(Body: EcosysParam(Name: roles_types, Index: #role_type#))\n        }.Else{\n            Span(Class: text-muted, Body: EcosysParam(Name: roles_types, Index: #role_type#))\n        }\n    }.Custom(custom_status){\n        If(#delete# == 0){\n            Span(Body: LangRes(active))\n        }.Else{\n            Span(Class: text-muted, Body: LangRes(deleted))\n        }\n    }.Custom(actions){\n        If(And(#delete#==0,#role_type#!=3)){\n            Div(Class: text-center, Body: Button(Body: Em(Class: fa fa-trash), Class: btn btn-danger, Contract: Roles_Del, Params: \"role_id=#id#\", Page: roles_list))\n        }\n   }.Where(#v_Where#).Order(\"delete ASC, id ASC\")\n\n    Div(Class: panel panel-primary){\n        Form(){\n            Div(Class: list-group-item){\n                Div(Class: row df f-valign){\n                    Div(Class: col-md-1 mt-sm text-right){\n                        Label(For: Search){\n                            Span(Body: LangRes(name))\n                        }\n                    }\n                    Div(Class: col-md-11 mc-sm){\n                        Div(Class: input-group){\n                            Input(Class: form-control, Type: text, Name: Search, Value: #v_Search#)\n                            Div(Class: input-group-btn){\n                                Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: roles_list, PageParams: \"isSearch=1,v_Search=Val(Search)\")\n                            }\n                        }\n                    }\n                }  \n            }\n\n            Div(Class: list-group-item){ \n                Table(Source: src_roles_list, Columns: \"$id$=custom_id,$name$=custom_name,$type$=custom_type,$created$ / $deleted$=custom_date,$status$=custom_status,$creator$=custom_creator,$actions$=actions\")\n                If(GetVar(isSearch) == 1){\n                    Div(Class: text-center){  \n                        Button(Body: $view_all$, Class: btn btn-primary, Page: roles_list, PageParams: \"isSearch=0\")\n                    }\n                }\n            }\n\n            Div(Class: panel-footer clearfix){\n                Div(Class: pull-right){\n                    Button(Body: LangRes(create), Class: btn btn-primary, Page: roles_create)\n                }\n            }\n            \n        }           \n    }\n\n}"
        },
        {
            "Name": "roles_create",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($new_role$)\n\tDiv(Class: breadcrumb){\n\t\tLinkPage($roles$, roles_list)\n\t\tSpan(/).Style(margin-right: 10px; margin-left: 10px;)\n\t\tSpan(Class: text-muted, Body: $new_role$)\n\t}\n\n    If(#param_role_type#>0){\n    }.Else{\n        SetVar(Name: param_role_type, Value: 1)\n    }\n\t\n    Div(Class: row df f-valign){\n        Div(Class: col-md-3)\n        Div(Class: col-md-6){\n\n            Div(Class: panel panel-primary){\n                Div(Class: panel-heading, Body: LangRes(new_role))\n                Form(){   \n\n\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\n\t\t\t\t\t\t\t\tLabel(For: role_name){\n\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(name))\n\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\n\t\t\t\t\t\t\t\tInput(Class: form-control, Type: text, Name: role_name)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tDiv(Class: list-group-item){\n\t\t\t\t\t\tDiv(Class: row df f-valign){\n\t\t\t\t\t\t\tDiv(Class: col-md-3 mt-sm text-right){\n\t\t\t\t\t\t\t\tLabel(){\n\t\t\t\t\t\t\t\t\tSpan(Body: LangRes(type))\n\t\t\t\t\t\t\t\t\tSpan(Class: text-danger, Body:*)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tDiv(Class: col-md-9 mc-sm text-left){\n\t\t\t\t\t\t\t\tEcosysParam(Name: roles_types, Source: src_roles)\n\t\t\t\t\t\t\t\tSelect(Name: role_type, Source: src_roles, NameColumn: name, ValueColumn: id, Value: #param_role_type#)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tDiv(Class: panel-footer clearfix){\n\t\t\t\t\t\tDiv(Class: pull-right){\n                            Button(Body: LangRes(create), Class: btn btn-primary, Page: roles_list, Contract: Roles_Create).Alert(Text: $want_create_new_role$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n                }\n            }\n        }\n\t\t\n        Div(Class: col-md-3)\n    }\n}"
        },
        {
            "Name": "roles_assign",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "default_menu",
            "Value": "Div(Class: content-wrapper){\n    \n    If(#v_role_id# > 0){\n        \n        SetTitle($assign$)\n        Div(Class: breadcrumb){\n            LinkPage($roles$, roles_list)\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            LinkPage(#v_role_name#, roles_view,, \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\")\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\n            Span(Class: text-muted, Body: $assign$)\n        }\n        \n        Div(Class: row df f-valign){\n            Div(Class: col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\n                \n                Div(Class: panel panel-primary){\n                    Div(Class: panel-heading, Body: LangRes(assign))\n                    Form(){\n                        \n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: role_id){\n                                        Span(Body: LangRes(role))\n                                    }\n                                }\n                                Div(Class: col-md-9 mt-sm text-left){\n                                    DBFind(Name: roles_list, Source: source_roles).Where(\"id=#v_role_id#\").Vars(prefix)\n                                    Input(Class: form-control hidden, Type: text, Name: role_id, Value: #prefix_id#)\n                                    Span(Class: h5, Body: LangRes(#prefix_role_name#))\n                                }\n                            }\n                        }\n                        \n                        Div(Class: list-group-item){\n                            Div(Class: row df f-valign){\n                                Div(Class: col-md-3 mt-sm text-right){\n                                    Label(For: role_id){\n                                        Span(Body: LangRes(type))\n                                    }\n                                }\n                                Div(Class: col-md-9 mt-sm text-left){\n                                    Span(Class: h5, Body: EcosysParam(Name: roles_types, Index: #prefix_role_type#)\n                                    If(#prefix_role_type# != 1){\n                                        P(Class: m0 text-danger h6, Body: LangRes(appointment_impossible))\n                                    }\n                                }\n                            }\n                        }\n                        \n                        If(#prefix_role_type# == 1){\n                            Div(Class: list-group-item){\n                                Div(Class: row df f-valign){\n                                    Div(Class: col-md-3 mt-sm text-right){\n                                        Label(For: role_name){\n                                            Span(Body: LangRes(member))\n                                        }\n                                    }\n                                    Div(Class: col-md-9 mc-sm text-left){\n                                        DBFind(Name: members, Source: source_members).Custom(custom_username){\n                                            #member_name# (Address(#id#) )\n                                        }\n                                        Select(Name: member_id, Source: source_members, NameColumn: custom_username, ValueColumn: id)\n                                    }\n                                }\n                            }\n                        }\n                        \n                        Div(Class: panel-footer clearfix){\n                            Div(Class: pull-right){\n                                Button(Body: LangRes(back), Class: btn btn-default, Page: roles_view, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\")\n                                If(#prefix_role_type# == 1){\n                                    Button(Body: LangRes(assign), Class: btn btn-primary, Page: roles_view, PageParams: \"v_role_id=#v_role_id#,v_role_name=#v_role_name#\", Contract: Roles_Assign, Params: \"member_id=Val(member_id)\").Alert(Text: $want_assign_member_to_role$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\n                                }\n                            }\n                        }\n                        \n                    }\n                    \n                }\n            }\n        }\n        \n    }.Else{\n        Div(Class: md-12 alert alert-danger text-center){\n            Span(Body: LangRes(attention))\n        }\n    }\n}"
        },
        {
            "Name": "court_view",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "SetVar(count, 0)\r\nDBFind(Name: roles_assign, Source: src_roles).Where(\"member_id=#key_id# and role_name='Court'\")\r\nForList(src_roles){\r\n    SetVar(count, 1)\r\n}\r\nIf(#count#<1){You have no access!}.Else{\r\n\r\nDiv(Class: content-wrapper){\r\n    \r\n    SetTitle(Предварительные заявки)\r\n    \r\n    DBFind(Name: patent_applications, Source: src_applications).Custom(application_id){\r\n\t\tSpan(#id#)\r\n    }.Custom(name){\r\n        Span(Class: h4 text-bold, Body: #name#)\r\n    }.Custom(date_creation){\r\n        Span(Class: h4 text-bold, Body: #date_creation#)\r\n    }.Custom(status){\r\n        Span(Class: h4 text-bold, Body: #status#)    \r\n    }.Custom(_admin){\r\n    Div(Class: pull-right){\r\n        Span(){\r\n            Button(Page: Application, PageParams: \"appl_id=#id#\", Class: btn btn-default fa fa-2x fa-eye)\r\n        }.Style(margin-left: 5px; margin-right: 5px;)\r\n    } \r\n}\r\n    \r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            \r\n            Div(Class: list-group-item){\r\n                Table(src_applications, \"id заявки=application_id,Название технологии=name,Дата создания=date_creation,Статус заявки=status,=_admin\")\r\n            }\r\n            \r\n\r\n        }\r\n    }\r\nъ"
        },
        {
            "Name": "view_applications",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "Div(Class: content-wrapper){\r\n    \r\n    SetTitle(Предварительные заявки)\r\n    \r\n    DBFind(Name: patent_applications, Source: src_applications).Custom(application_id){\r\n\t\tSpan(#id#)\r\n    }.Custom(creator_name){\r\n        Span(Class: h4 text-bold, Body: #creator_name#)\r\n    }.Custom(date_creation){\r\n        Span(Class: h4 text-bold, Body: #date_creation#)\r\n    }.Order(id)\r\n    \r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            \r\n            Div(Class: list-group-item){\r\n                Table(src_applications, \"id заявки=application_id,Дата создания=date_creation,Заявитель=creator_name\")\r\n            }\r\n            \r\n            Div(Class: panel-footer clearfix){\r\n                Div(Class: pull-right){\r\n                    Button(Body: Мои предварительные заявки, Class: btn btn-default, Page: u_application_list)\r\n                }\r\n            }\r\n        }\r\n    }"
        },
        {
            "Name": "Application",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "SetVar(title,Предварительная заявка)\r\n\r\nIf(#appl_id#>0){}.Else{SetVar(appl_id, 1)}\r\n\r\nIf(GetVar(appl_id)){\r\n    DBFind(Name: patent_applications, Source: src_applications).WhereId(#appl_id#).Vars(app)\r\n}\r\n\r\nSetTitle(#title#)\r\n\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        Div(){\r\n            Span(/).Style(margin-right: 10px; margin-left: 10px;)\r\n            Span(#title#, text-muted)\r\n        }\r\n    }\r\n    If(GetVar(appl_id)){\r\n        Div(row df f-valign){\r\n            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3 mt-sm text-left){\r\n                Div(panel panel-default){\r\n                    Form(){\r\n                        Div(Class: list-group-item text-center){\r\n                            Span(Class: h3, Body: #app_name#)\t\r\n                        }\r\n                        Div(row df f-valign){\r\n                                Div(col-md-5 mt-sm text-right h5){\r\n                                    Strong(Описание:)\r\n                                }\r\n                                Div(col-md-6 mt-sm text-left h5){\r\n                                    Div(){\r\n                                        Span(#app_description#)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            Div(row df f-valign){\r\n                                Div(col-md-5 mt-sm text-right h5){\r\n                                    Strong(Формула:)\r\n                                }\r\n                                Div(col-md-6 mt-sm text-left h5){\r\n                                    Div(){\r\n                                        Span(#app_formula#)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            Div(row df f-valign){\r\n                                Div(col-md-5 mt-sm text-right h5){\r\n                                    Strong(Заявитель:)\r\n                                }\r\n                                Div(col-md-6 mt-sm text-left h5){\r\n                                    Div(){\r\n                                        Span(#app_creator_name#)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            Div(row df f-valign){\r\n                                Div(col-md-5 mt-sm text-right h5){\r\n                                    Strong(Id заявки:)\r\n                                }\r\n                                Div(col-md-6 mt-sm text-left h5){\r\n                                    Div(){\r\n                                        Span(#app_id#)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            Div(row df f-valign){\r\n                                Div(col-md-5 mt-sm text-right h5){\r\n                                    Strong(Дата:)\r\n                                }\r\n                                Div(col-md-6 mt-sm text-left h5){\r\n                                    Div(){\r\n                                        Span(#app_date_creation#)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n                        If(#key_id# == #app_id_creator#){\r\n                            Div(Class: panel-footer clearfix){\r\n                              Div(Class: pull-right){\r\n                                 \r\n                                    Button(Body:  Мои предварительные заявки, Class: btn btn-default, Page: u_application_list)   \r\n                                                                     \r\n                             }\r\n                            }\r\n                        }.Else{\r\n                            Div(Class: panel-footer clearfix){\r\n                              Div(Class: pull-right){\r\n                                 \r\n                                    Button(Body:  Предварительные заявки, Class: btn btn-default, Page: court_view)   \r\n                                                                     \r\n                             }\r\n                            }\r\n                        }\r\n                           \r\n                    \r\n}"
        },
        {
            "Name": "u_application_creation",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "Div(Class: content-wrapper){\r\n\r\n\tSetTitle(Создание предварительной заявки)\r\n\r\n    Div(Class: row df f-valign){\r\n        Div(Class: col-md-3)\r\n        Div(Class: col-md-6){\r\n\t\t\r\n            Div(Class: panel panel-primary){\r\n                Div(Class: panel-heading, Body: Информация по заявке)\r\n                Form(){\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: name){\r\n                                    Span(Body: Название технологии)\r\n                                }\r\n                \t\t\t}\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                \t\t\t    Input(Name: name, Class: form-control, Type: text)\r\n                \t\t\t}\r\n                        }                   \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-lg text-right){\r\n                                Label(For: description){\r\n                                    Span(Body: Описание технологии)\r\n                                }\r\n                \t\t\t}\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                \t\t\t    Input(Name: description, Class: form-control, Type: textarea)\r\n                \t\t\t}\r\n                        }                   \r\n                    }\r\n\r\n                    Div(Class: list-group-item){\r\n                        Div(Class: row df f-valign){\r\n                \t\t\tDiv(Class: col-md-3 mt-sm text-right){\r\n                                Label(For: formula){\r\n                                    Span(Body: Формула для патента)\r\n                                }\r\n                \t\t\t}\r\n                \t\t\tDiv(Class: col-md-9 mc-sm text-left){\r\n                \t\t\t    Input(Name: formula, Class: form-control, Type: text)\r\n                \t\t\t}\r\n                        }                   \r\n                    }           \r\n\r\n                    Div(Class: panel-footer clearfix){\r\n                        Div(Class: pull-right){\r\n                            Button(Body: Мои заявки, Class: btn btn-default, Page: u_application_list)\r\n                            Button(Body: Создать, Class: btn btn-primary, Page: u_application_list, Contract: application_create)\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\t\t}\r\n\t\tDiv(Class: col-md-3)\r\n    }\r\n}"
        },
        {
            "Name": "u_application_list",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "Div(Class: content-wrapper){\r\n    \r\n    SetTitle(Мои предварительные заявки)\r\n\r\n    DBFind(Name: patent_applications, Source: src_applications).Where(id_creator=#key_id#).Custom(application_id){\r\n\t\tSpan(#id#)\r\n    }.Custom(name){\r\n        Span(Class: h4 text-bold, Body: #name#)\r\n    }.Custom(date_creation){\r\n        Span(Class: h4 text-bold, Body: #date_creation#)\r\n    }.Custom(status){\r\n        Span(Class: h4 text-bold, Body: #status#)    \r\n    }.Custom(_admin){\r\n    Div(Class: pull-right){\r\n        Span(){\r\n            Button(Page: Application, PageParams: \"appl_id=#id#\", Class: btn btn-primary fa fa-2x fa-eye)\r\n        }.Style(margin-left: 5px; margin-right: 5px;)\r\n        Span(){\r\n            Button(Page: give_application, PageParams: \"appl_id=#id#\", Class: btn btn-default fa fa-2x fa-exchange)\r\n        }.Style(margin-left: 5px; margin-right: 5px;)\r\n    } \r\n}\r\n    \r\n    Div(Class: panel panel-primary){\r\n        Form(){\r\n            \r\n            Div(Class: list-group-item){\r\n                Table(src_applications, \"id заявки=application_id,Название технологии=name,Дата создания=date_creation,Статус заявки=status,=_admin\")\r\n            }\r\n            \r\n            Div(Class: panel-footer clearfix){\r\n                Div(Class: pull-right){\r\n                    Button(Body:  Все поданные заявки, Class: btn btn-default, Page: view_applications)                    \r\n                    Button(Body: Создать предварительную заявку, Class: btn btn-primary, Page: u_application_creation)\r\n                }\r\n            }\r\n        }\r\n    }"
        }
    ],
    "blocks": [],
    "menus": [
        {
            "Name": "Applications",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title:\"Предв. заявки\", Page:view_applications, Icon:\"fa fa-file\")\nMenuItem(Title:\"Предв. заявки (РП/СИП)\", Page:court_view, Icon:\"fa icon-copy\")"
        }
    ],
    "parameters": [],
    "languages": [],
    "contracts": [
        {
            "Name": "give_application",
            "Value": "contract give_application {\n    data {\n        GiveId int\n        appl_id int \n    }\n\n    conditions {\n        // $appl = DBFind(\"patent_applications\").Where(\"id = $\", $appl_id).Columns(\"id_creator\")\n        var appl_map int\n        appl_map = DBFind(\"patent_applications\").Columns(\"id,id_creator\").WhereId($appl_id).One(\"id_creator\")\n        if appl_map != $key_id {\n          warning \"You have no rights!\"\n        }\n        //appl_map = DBFind(\"patent_applications\").Where(\"id = $\", $appl_id).Row()\n        //if $key_id != appl_map[\"id_creator\"] {\n            //warning \"You have no rights!\"\n       // }   проверка $key_id == creator_id from patent_applications by appl_id\n    }\n\n    action {\n        $member_map = DBFind(\"members\").Where(\"id = $\", $GiveId).Row()\n        DBUpdate(`patent_applications`,$appl_id, \"creator_name, id_creator\", $member_map[\"member_name\"], $GiveId)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "Roles_Del",
            "Value": "contract Roles_Del {\n    data {\n        role_id int\n    }\n\n    conditions {\n        // check role\n        $role_map = DBFind(\"roles_list\").Where(\"id=$\", $role_id).Row()\n        if ($role_map[\"id\"] == nil) {\n            warning \"Role not found\"\n        }\n\n        // system role can not be deleted\n        if (Int($role_map[\"role_type\"]) == 3) {\n            warning \"System role can not be removed\"\n        }\n\n        // check creator of the role\n        if (Int($role_map[\"creator_id\"]) != $key_id) {\n            warning \"Sorry, you are not the creator of this role\"\n        }\n    }\n\n    action {\n        // get the list of participants\n        $ret_assign = DBFind(\"roles_assign\").Columns(\"id\").Where(\"role_id = $ and delete = $\", $role_id, 0).Order(\"id\")\n\n        // delete all participants\n        $len_assign = Len($ret_assign)\n        $i_assign = 0\n        while ($i_assign < $len_assign) {\n            $vals_assign = $ret_assign[$i_assign]\n            Roles_Unassign(\"row_id\", Int($vals_assign[\"id\"]))\n            $i_assign = $i_assign + 1\n        }\n\n        // delete the role\n        DBUpdate(\"roles_list\", $role_id, \"delete,timestamp date_delete\", 1, $block_time)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "Roles_Unassign",
            "Value": "contract Roles_Unassign {\n    data {\n        row_id int\n        origin_contract string \"optional\"\n    }\n    \n    conditions {\n        // check record\n        $assign_map = DBFind(\"roles_assign\").Where(\"id=$\", $row_id).Row()\n        if ($assign_map[\"id\"] == nil) {\n            warning \"Role not found for the specified member\"\n        }\n        \n        // get role\n        $role_map = DBFind(\"roles_list\").Where(\"id=$\", Int($assign_map[\"role_id\"])).Row()\n        if ($role_map[\"id\"] == nil) {\n            warning \"Role not found in the roles registry\"\n        }\n        \n        var specialRule int\n        if $origin_contract == \"sysparams_AcceptValidator\"{\n            specialRule = 1\n        }\n        if $origin_contract == \"sysparams_DelegateRefresh\" && $role_map[\"role_name\"] == \"Delegate\" {\n            specialRule = 1\n        }\n        if $origin_contract == \"sysparams_CandidateValidator_Delete\" && $role_map[\"role_name\"] == \"Candidate for validators\" {\n            specialRule = 1\n        }\n        if $origin_contract == \"sysparams_InvestorRefresh\" && $role_map[\"role_name\"] == \"Investor with voting rights\" {\n            specialRule = 1\n        }\n        \n        if specialRule == 0 {\n            // check creator of the role\n            if (Int($role_map[\"creator_id\"]) != $key_id) {\n                warning \"Sorry, you are not the creator of this role\"\n            }\n        }\n    }\n    \n    action {\n        // delete the member\n        DBUpdate(\"roles_assign\", $row_id, \"delete,timestamp date_end\", 1, $block_time)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "Roles_Create",
            "Value": "contract Roles_Create {\n    data {\n        role_name string\n        role_type int\n        company_id int \"optional\"\n    }\n    \n    conditions {\n        // system role\n        if ($role_type == 3) {\n            warning \"System role can not be created\"\n        }\n        \n        // company role\n        if ($role_type == 4) {\n            \n            // check param\n            if ($company_id == 0) {\n                warning \"On this page you can not create a role for the company. Go to the company's view page to create a role\"\n            }\n            \n            // check creator of the company\n            if ($company_id != $key_id) {\n                warning \"Sorry, you are not the creator of this company\"\n            }\n        }\n        \n        // check member\n        $member_map = DBFind(\"members\").Where(\"id = $\", $key_id).Row()\n        if ($member_map[\"id\"] == nil) {\n            warning \"You are not a member of the ecosystem\"\n        }\n    }\n    \n    action {\n        if ($role_type == 4) {\n            $result = DBInsert(\"roles_list\", \"role_name,role_type,creator_id,creator_name,creator_avatar,company_id,timestamp date_create,delete\",\n            $role_name, $role_type, $key_id, $member_map[\"member_name\"], $member_map[\"avatar\"], $company_id, $block_time, 0)\n        } else {\n            $result = DBInsert(\"roles_list\", \"role_name,role_type,creator_id,creator_name,creator_avatar,company_id,timestamp date_create,delete\",\n            $role_name, $role_type, $key_id, $member_map[\"member_name\"], $member_map[\"avatar\"], 0, $block_time, 0)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "Roles_Assign",
            "Value": "contract Roles_Assign {\n    data {\n        role_id int\n        member_id int\n        origin_contract string \"optional\"\n    }\n    \n    conditions {\n        \n        $role_map = DBFind(\"roles_list\").Where(\"id = $\", $role_id).Row()\n        $member_map = DBFind(\"members\").Where(\"id = $\", $member_id).Row()\n        $appointer_map = DBFind(\"members\").Where(\"id = $\", $key_id).Row()\n        \n        if !$role_map {\n            warning \"Role not found\"\n        }\n        if !$member_map {\n            warning \"Member not found\"\n        }\n        if !$appointer_map {\n            warning \"Appointer not found\"\n        }\n        \n        if(Int($role_map[\"delete\"]) == 1) {\n            warning \"This role has been deleted. The appointment of members is impossible\"\n        }\n        \n        var specialRule int\n        if $origin_contract == \"sysparams_AcceptValidator\" && $role_map[\"role_name\"] == \"Validator\" {\n            specialRule = 1\n        }\n        if $origin_contract == \"sysparams_DelegateRefresh\" && $role_map[\"role_name\"] == \"Delegate\" {\n            specialRule = 1\n        }\n        if $origin_contract == \"sysparams_CandidateValidatorRequest\" && $role_map[\"role_name\"] == \"Candidate for validators\" {\n            specialRule = 1\n        }\n        if $origin_contract == \"sysparams_InvestorRefresh\" && $role_map[\"role_name\"] == \"Investor with voting rights\" {\n            specialRule = 1\n        }\n        if specialRule == 0 {\n            if((Int($role_map[\"role_type\"]) != 1) &&(Int($role_map[\"role_type\"]) != 4)) {\n                warning \"This role is not assignable. The appointment of members is impossible\"\n            }\n            if(Int($role_map[\"creator_id\"]) != $key_id) {\n                warning \"Sorry, you are not the creator of this role. The appointment of members is impossible\"\n            }\n        }\n        $assign_id = DBFind(\"roles_assign\").Where(\"role_id=$ and member_id=$ and delete=0\", $role_id, $member_id).One(\"id\")\n        if($assign_id != nil) {\n            warning \"This member has already been added\"\n        }\n    }\n    \n    action {\n        DBInsert(\"roles_assign\", \"role_id,role_type,role_name,member_id,member_name,member_avatar,appointed_by_id,appointed_by_name,timestamp date_start,delete\",\n        $role_id, $role_map[\"role_type\"], $role_map[\"role_name\"], $member_id, $member_map[\"member_name\"], $member_map[\"avatar\"], $key_id, $appointer_map[\"member_name\"], $block_time, 0)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "RoleConditions",
            "Value": "contract RoleConditions {\n    data{\n        role string\n    }\n    conditions {\n        $assigned_id = DBFind(\"roles_assign\").Where(\"role_name=? and member_id=? and delete=0\", $role, $key_id).One(\"id\")\n\t\tif ($assigned_id == nil){\n            warning Sprintf(\"This action allowed only for role: %v\", $role)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "application_create",
            "Value": "contract application_create {\n    data {\n        name string\n        description string\n        formula string\n    }\n\n    conditions {\n\n    }\n\n    action {\n        $member_map = DBFind(\"members\").Where(\"id = $\", $key_id).Row()\n  \n        $application_id = DBInsert(`patent_applications`, \"name, description, formula, timestamp date_creation, status, creator_name, id_creator\", $name, $description, $formula, $time, \"Предварительная заявка\", $member_map[\"member_name\"], $key_id)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "tables": [
        {
            "Name": "patent_applications",
            "Columns": "[{\"name\":\"formula\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"id_creator\",\"type\":\"number\",\"conditions\":\"ContractConditions(\\\"MainCondition\\\")\"},{\"name\":\"description\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"creator_name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"date_creation\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"status\",\"type\":\"text\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        }
    ],
    "data": []
}