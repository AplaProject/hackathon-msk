{
    "pages": [
        {
            "Name": "gazprom_rig_list",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(Class: content-wrapper){\n \n    SetTitle(\"Оборудование\")\n   \n    DBFind(rigs, src_rigs).Custom(custom_regnum){\n        LinkPage(Page: referendums_view, PageParams: \"referendum_id=#id#\"){\n            Span(Class: h5 text-bold, Body: #regnum#)\n        }\n    }.Custom(custom_status){\n        Span(Class: h5, Body: #status_cur#)\n    }.Custom(custom_location){\n        DBFind(location).Columns(\"address\").WhereId(#location_cur#).Vars(cur)\n        Span(Class: h5, Body: #cur_address#)\n    }.Custom(custom_actions){\n        Div(Class: pull-right){\n            Button(Body: \"произвести ремонт\", Class: btn btn-secondary, Page: gazprom_report_maintenance)\n        }\n        Div(Class: pull-right){\n            Button(Body: \"передать в собственность\", Class: btn btn-secondary, Page: gazprom_change_ownership)        \n        }\n    }.Order(id)\n    \n    Div(Class: panel panel-primary){\n        Form(){\n            \n            Div(Class: list-group-item){\n                Table(src_rigs, \"Регистрационный номер=custom_regnum,Статус=custom_status,Местоположение=custom_location,=custom_actions\")\n                If(GetVar(isSearch) == 1){\n                    Div(Class: text-center){\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: referendums_list, PageParams: \"isSearch=0\")\n                    }\n                }\n            }\n            \n            Div(Class: panel-footer clearfix){\n                Div(Class: pull-right){\n                    Button(Body: \"Добавить новое оборудование\", Class: btn btn-primary, Page: gazprom_create_dig)\n                }\n            }\n        }\n    }\n}"
        },
        {
            "Name": "gazprom_postavka_main_list",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(Class: content-wrapper){\n    \n    DBFind(actors, id_src).Where(\"pubkey = '#key_id#'\").Vars(visitor)\n\n    SetTitle(\"Оборудование\")\n   \n    DBFind(rigs, src_rigs).Custom(custom_regnum){\n        LinkPage(Page: referendums_view, PageParams: \"referendum_id=#id#\"){\n            Span(Class: h5 text-bold, Body: #regnum#)\n        }\n    }.Custom(custom_status){\n        Span(Class: h5, Body: #status_cur#)\n    }.Custom(custom_location){\n        DBFind(location).Columns(\"address\").WhereId(#location_cur#).Vars(cur)\n        Span(Class: h5, Body: #cur_address#)\n    }.Custom(custom_actions){\n        Div(Class: pull-right){\n            Button(Body: \"начать перемещение\", Class: btn btn-secondary, Page: gazprom_start_move)\n        }\n        Div(Class: pull-right){\n            Button(Body: \"завершить перемещение\", Class: btn btn-secondary, Page: gazprom_move_finish)\n        }\n        Div(Class: pull-right){\n            Button(Body: \"заменить деталь\", Class: btn btn-secondary, Page: gazprom_switch_part)        \n        }\n    }.Where(\"owner_cur = #visitor_id#\").Order(id)\n    \n    Div(Class: panel panel-primary){\n        Form(){\n            \n            Div(Class: list-group-item){\n                Table(src_rigs, \"Регистрационный номер=custom_regnum,Статус=custom_status,Местоположение=custom_location,=custom_actions\")\n                If(GetVar(isSearch) == 1){\n                    Div(Class: text-center){\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: referendums_list, PageParams: \"isSearch=0\")\n                    }\n                }\n            }\n            \n            Div(Class: panel-footer clearfix){\n                Div(Class: pull-right){\n                    Button(Body: \"Добавить новую деталь\", Class: btn btn-primary, Page: gazprom_create_part)\n                }\n            }\n        }\n    }\n}"
        },
        {
            "Name": "gazprom_main_neft_list",
            "Conditions": "ContractConditions(\"MainConditions\")",
            "Menu": "Applications",
            "Value": "Div(Class: content-wrapper){\n \n    SetTitle(\"Оборудование\")\n   \n    DBFind(rigs, src_rigs).Custom(custom_regnum){\n        LinkPage(Page: referendums_view, PageParams: \"referendum_id=#id#\"){\n            Span(Class: h5 text-bold, Body: #regnum#)\n        }\n    }.Custom(custom_status){\n        Span(Class: h5, Body: #status_cur#)\n    }.Custom(custom_location){\n        DBFind(location).Columns(\"address\").WhereId(#location_cur#).Vars(cur)\n        Span(Class: h5, Body: #cur_address#)\n    }.Custom(custom_actions){\n        Div(Class: pull-right){\n            Button(Body: \"начать бурение\", Class: btn btn-secondary, Page: gazprom_start_move)\n        }\n    }.Order(id)\n    \n    Div(Class: panel panel-primary){\n        Form(){\n            \n            Div(Class: list-group-item){\n                Table(src_rigs, \"Регистрационный номер=custom_regnum,Статус=custom_status,Местоположение=custom_location,=custom_actions\")\n                If(GetVar(isSearch) == 1){\n                    Div(Class: text-center){\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: referendums_list, PageParams: \"isSearch=0\")\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        {
            "Name": "gazprom_vote",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "DBFind(actors, id_src).Where(\"pubkey = '#key_id#'\").Vars(instance)\r\n\r\nDBFind(pending_malfunctions, voting_owner).Where(\"owner_id = #instance_id# and votes_for < 2 and votes_against < 1\").Custom(finishing) {\r\n    Div(Class: pull-right){\r\n        Button(Body: Em(Class: fa fa-thumbs-down), Class: btn btn-danger, Contract: ownerVote, Params: \"Malfunction_id=#id#,Vote_type=0\", Page: gazprom_vote)\r\n    }\r\n    Div(Class: pull-right){\r\n        Button(Body: Em(Class: fa fa-thumbs-up), Class: btn btn-success, Contract: ownerVote, Params: \"Malfunction_id=#id#,Vote_type=1\", Page: gazprom_vote)\r\n    }\r\n}.Custom(custom_rig_regnum){\r\n    DBFind(rigs).Columns(\"regnum\").WhereId(#rig_id#).Vars(rig)\r\n    Span(Class: h5, Body: If(Len(rig)>0){#rig_regnum#}.Else{None})\r\n}.Custom(custom_part_regnum){\r\n    DBFind(part).Columns(\"sernum\").WhereId(#part_id#).Vars(prt)\r\n    Span(Class: h5, Body: #prt_sernum#)\r\n}\r\n\r\nDBFind(pending_malfunctions, voting_producer).Where(\"producer_id = #instance_id# and votes_for < 2 and votes_against < 1\").Custom(finishing) {\r\n    Div(Class: pull-right){\r\n        Button(Body: Em(Class: fa fa-thumbs-down), Class: btn btn-danger, Contract: producerVote, Params: \"Malfunction_id=#id#,Vote_type=0\", Page: gazprom_vote)\r\n    }\r\n    Div(Class: pull-right){\r\n        Button(Body: Em(Class: fa fa-thumbs-up), Class: btn btn-success, Contract: producerVote, Params: \"Malfunction_id=#id#,Vote_type=1\", Page: gazprom_vote)\r\n    }\r\n}.Custom(custom_rig_regnum){\r\n    DBFind(rigs).Columns(\"regnum\").WhereId(#rig_id#).Vars(rig)\r\n    Span(Class: h5, Body: #rig_regnum#)\r\n}.Custom(custom_part_regnum){\r\n    DBFind(part).Columns(\"sernum\").WhereId(#part_id#).Vars(prt)\r\n    Span(Class: h5, Body: #prt_sernum#)\r\n}\r\n\r\nDiv(panel-heading, Body: \"Голосование владельца\")\r\nDiv(Class: list-group-item){\r\n    Table(voting_owner, \"Malfunction ID=id,Votes for=votes_for,Votes against=votes_against,Part RN=custom_part_regnum,Rig RN=custom_rig_regnum, =finishing\")\r\n}\r\nDiv(panel-heading, Body: \"Голосование производителя\")\r\nDiv(Class: list-group-item){\r\n    Table(voting_producer, \"Malfunction ID=id,Votes for=votes_for,Votes against=votes_against,Part RN=custom_part_regnum,Rig RN=custom_rig_regnum, =finishing\")\r\n}"
        },
        {
            "Name": "gazprom_false_oracle",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(content-wrapper){\r\n    \r\n    Div(row df f-valign){\r\n        Div(col-sm-8 col-sm-offset-2 text-left){\r\n            Div(panel panel-primary){\r\n                Div(panel-heading, Body: \"Отчет о поломке детали\")\r\n\r\n                Form(){\r\n                    Div(list-group-item){\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Регистрационный номер детали\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                DBFind(actors, id_src).Where(\"pubkey = '#key_id#'\").Vars(instance)\r\n                                DBFind(part, part_src).Columns(\"id,sernum\").Where(\"producer_id = #instance_id#\")\r\n                                Select(Name: Part_id, Source: part_src, NameColumn: sernum, ValueColumn: id)\r\n                            }\r\n                        }\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Сопроводительный документ\")\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name: Event_Meta, Type: file)\r\n                            }\r\n                        }   \r\n                        }\r\n                        Div(panel-footer){\r\n                            Div(clearfix){\r\n                                Div(pull-right){\r\n                                    Button(Body: \"Отправить отчет\", Class: btn btn-primary btn-pill-right, Contract: reportMalfunction)\r\n                                }\r\n                            }\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "gazprom_report_maintenance",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(content-wrapper){\r\n    \r\n    Div(row df f-valign){\r\n        Div(col-sm-8 col-sm-offset-2 text-left){\r\n            Div(panel panel-primary){\r\n                Div(panel-heading, Body: \"Отчет о ТО детали\")\r\n\r\n                Form(){\r\n                    Div(list-group-item){\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Регистрационный номер детали\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                DBFind(actors, id_src).Where(\"pubkey = '#key_id#'\").Vars(instance)\r\n                                DBFind(part, part_src).Columns(\"id,sernum\").Where(\"producer_id = #instance_id#\")\r\n                                Select(Name: Part_id, Source: part_src, NameColumn: sernum, ValueColumn: id)\r\n                            }\r\n                        }\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Сопроводительный документ\")\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name:  Event_Meta, Type: file)\r\n                            }\r\n                        }   \r\n                        }\r\n                        Div(panel-footer){\r\n                            Div(clearfix){\r\n                                Div(pull-right){\r\n                                    Button(Body: \"Отправить отчет\", Class: btn btn-primary btn-pill-right, Contract: reportMaintenance)\r\n                                }\r\n                            }\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "gazprom_switch_part",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(content-wrapper){\r\n    \r\n    Div(row df f-valign){\r\n        Div(col-sm-8 col-sm-offset-2 text-left){\r\n            Div(panel panel-primary){\r\n                Div(panel-heading, Body: \"Переставить деталь\")\r\n\r\n                Form(){\r\n                    Div(list-group-item){\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Регистрационный номер детали\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                DBFind(actors, id_src).Where(\"pubkey = '#key_id#'\").Vars(instance)\r\n                                DBFind(part, part_src).Columns(\"id,sernum\").Where(\"producer_id = #instance_id#\")\r\n                                Select(Name: Part_id, Source: part_src, NameColumn: sernum, ValueColumn: id)\r\n                            }\r\n                        }\r\n\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Удалить деталь?\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                Data(uninstall_choice, \"name,choice\") {\r\n                                    Удалить,true\r\n                                    Переставить,false\r\n                                }\r\n                                RadioGroup(Name: choice, Source: uninstall_choice, NameColumn: name, ValueColumn: choice, Value: false)\r\n                            }\r\n                        }\r\n                        Div(row df f-valign){\r\n                                Div(col-md-3 mt-sm text-right){\r\n                                    Strong(\"Регистрационный номер станка\")\r\n                                }\r\n                                Div(col-md-6 mb-sm text-left){\r\n                                    DBFind(rigs, rigs_src).Columns(\"id,regnum\")\r\n                                    Select(Name: New_rig, Source:rigs_src, NameColumn: regnum, ValueColumn: id)\r\n                                }\r\n                            }\r\n                        If(choice == true) {\r\n                            SetVar(Name: New_rig, Value: 0)\r\n                        }.Else{}\r\n                        Div(panel-footer){\r\n                            Div(clearfix){\r\n                                Div(pull-right){\r\n                                    Button(Body: \"Переставить деталь\", Class: btn btn-primary btn-pill-right, Contract: switchPart)\r\n                                }\r\n                            }\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "gazprom_create_part",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(content-wrapper){\r\n\r\n    SetTitle(\"Производитель\")\r\n    \r\n    Div(row df f-valign){\r\n        Div(col-sm-8 col-sm-offset-2 text-left){\r\n            Div(panel panel-primary){\r\n                Div(panel-heading, Body: \"Добавить новую деталь\")\r\n\r\n                Form(){\r\n                    Div(list-group-item){\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Регистрационный номер\")\r\n                            }\r\n                            Div(col-md-9 mb-sm text-left){\r\n                                Input(Name: Sernum)\r\n                            }\r\n                        }\r\n                        \r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Техническая документация\")\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name: Meta, Type: file)\r\n                            }\r\n                        }\r\n\r\n                        Div(panel-footer){\r\n                            Div(clearfix){\r\n                                Div(pull-right){\r\n                                    Button(Body: \"Добавить деталь\", Class: btn btn-primary btn-pill-right, Contract: createPart)\r\n                                }\r\n                            }\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "gazprom_move_finish",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "DBFind(actors, id_src).Where(\"pubkey = '#key_id#'\").Vars(instance)\r\n\r\nDBFind(event, events_finish).Where(\"initiator_id = #instance_id# and type = 'move_start' and date_end_actual is NULL\").Custom(finishing) {\r\n    Button(Body: \"Finish\", Class: btn btn-primary, Contract: finishMove, Params: \"event_id=#id#\", Page: gazprom_move_finish)\r\n}.Custom(rig_regnum){\r\n    DBFind(rigs).Where(\"id ='#rig_id#'\").Vars(rig)\r\n    Span(Class: h5, Body: #rig_regnum#)\r\n}.Custom(cst_start){\r\n        DBFind(location).Columns(\"address\").WhereId(#location_start_id#).Vars(cur)\r\n        Span(Class: h5, Body: #cur_address#)\r\n}.Custom(cst_end){\r\n        DBFind(location).Columns(\"address\").WhereId(#location_end_id#).Vars(cur)\r\n        Span(Class: h5, Body: #cur_address#)\r\n}\r\n\r\n Div(Class: list-group-item){\r\n    Table(events_finish, \"Event ID=id,Starting point=cst_start,Destination=cst_end,Starting date=date_start,Rig RN=rig_regnum, =finishing\")\r\n}"
        },
        {
            "Name": "gazprom_start_move",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(content-wrapper){\r\n    \r\n    Div(row df f-valign){\r\n        Div(col-sm-8 col-sm-offset-2 text-left){\r\n            Div(panel panel-primary){\r\n                Div(panel-heading, Body: \"Переместить станок\")\r\n\r\n                Form(){\r\n                    Div(list-group-item){\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Регистрационный номер станка\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                DBFind(rigs, rigs_src).Columns(\"id,regnum\").Where(\"status_cur = 'standby'\")\r\n                                Select(Name: Rig_id, Source:rigs_src, NameColumn: regnum, ValueColumn: id)\r\n                            }\r\n                        }\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Дата окончания\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                Input(Name: Date_finish, Type: date)\r\n                            }\r\n                        }\r\n\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Точка назначения\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                DBFind(location, location_src).Columns(\"id,address\")\r\n                                Select(Name: Location_id_finish, Source:location_src, NameColumn: address, ValueColumn: id)\r\n                            }\r\n                            Div(col-md-3 mb-sm text-right){\r\n                                Button(Body: \"Создать локацию\", Class: btn btn-secondary btn-pill-right, Page: gazprom_create_location)\r\n                            }\r\n                        }\r\n\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Сопроводительный документ\")\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name:  Event_meta, Type: file)\r\n                            }\r\n                        }   \r\n\r\n                        Div(panel-footer){\r\n                            Div(clearfix){\r\n                                Div(pull-right){\r\n                                    Button(Body: \"Начать перемещение\", Class: btn btn-primary btn-pill-right, Contract: moveRig)\r\n                                }\r\n                            }\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "gazprom_start_dig",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(content-wrapper){\r\n    \r\n    Div(row df f-valign){\r\n        Div(col-sm-8 col-sm-offset-2 text-left){\r\n            Div(panel panel-primary){\r\n                Div(panel-heading, Body: \"Начать бурение\")\r\n\r\n                Form(){\r\n                    Div(list-group-item){\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Регистрационный номер станка\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                DBFind(rigs, rigs_src).Columns(\"id,regnum\").Where(\"status_cur = 'standby'\")\r\n                                Select(Name: Rig_id, Source:rigs_src, NameColumn: regnum, ValueColumn: id)\r\n                            }\r\n                        }\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Дата окончания\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                Input(Name: Date_finish, Type: date)\r\n                            }\r\n                        }\r\n\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Сопроводительный документ\")\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name:  Event_Meta, Type: file)\r\n                            }\r\n                        }   \r\n\r\n                        Div(panel-footer){\r\n                            Div(clearfix){\r\n                                Div(pull-right){\r\n                                    Button(Body: \"Начать бурение\", Class: btn btn-primary btn-pill-right, Contract: startDig)\r\n                                }\r\n                            }\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "gazprom_finish_dig",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "DBFind(actors, id_src).Where(\"pubkey = '#key_id#'\").Vars(instance)\r\n\r\nDBFind(event, events_finish).Where(\"receiver_id = #instance_id# and type = 'dig_start' and date_end_actual is NULL\").Custom(approval) {\r\n    Button(Body: \"Finish\", Class: btn btn-primary, Contract: finishDig, Params: \"event_id=#id#\", Page: gazprom_finish_dig)\r\n}.Custom(rig_regnum){\r\n    DBFind(rigs).Where(\"id ='#rig_id#'\").Vars(rig)\r\n    Span(Class: h5, Body: #rig_regnum#)\r\n}.Custom(cst_start){\r\n        DBFind(location).Columns(\"address\").WhereId(#location_start_id#).Vars(cur)\r\n        Span(Class: h5, Body: #cur_address#)\r\n}.Custom(cst_end){\r\n        DBFind(location).Columns(\"address\").WhereId(#location_end_id#).Vars(cur)\r\n        Span(Class: h5, Body: #cur_address#)\r\n}\r\n\r\n Div(Class: list-group-item){\r\n    Table(events_finish, \"Event ID=id,Location=cst_end,Starting date=date_start,Rig RN=rig_regnum, =approval\")\r\n}"
        },
        {
            "Name": "gazprom_change_ownership",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(content-wrapper){\r\n    \r\n    Div(row df f-valign){\r\n        Div(col-sm-8 col-sm-offset-2 text-left){\r\n            Div(panel panel-primary){\r\n                Div(panel-heading, Body: \"Передать собственность\")\r\n\r\n                Form(){\r\n                    Div(list-group-item){\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Станок\")\r\n                            }\r\n                             Div(col-md-6 mb-sm text-left){\r\n                                DBFind(actors, id_src).Where(\"pubkey = '#key_id#'\").Vars(instance)\r\n                                DBFind(rigs, rigs_src).Columns(\"id,regnum\").Where(\"owner_cur = #instance_id#\")\r\n                                Select(Name: Rig_id, Source:rigs_src, NameColumn: regnum, ValueColumn: id)\r\n                            }\r\n                        }\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Имя участника в сети\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                DBFind(actors, actor_data).Columns(\"id,name\")\r\n                                Select(Name: New_owner, Source: actor_data, Class: form-control, NameColumn: \"name\", ValueColumn: \"id\")\r\n                            }\r\n                        }\r\n                        \r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Сопроводительный документ\")\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name: Event_meta, Type: file)\r\n                            }\r\n                        }\r\n                        Div(panel-footer){\r\n                            Div(clearfix){\r\n                                Div(pull-right){\r\n                                    Button(Body: \"Передать собственность\", Class: btn btn-primary btn-pill-right, Contract: changeOwnership)\r\n                                }\r\n                            }\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nSetVar(rig_cur_id, Rig_id)\r\nInclude(gazprom_events_logs)"
        },
        {
            "Name": "gazprom_create_actor",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(content-wrapper){   \r\n    Div(row df f-valign){\r\n        Div(col-sm-8 col-sm-offset-2 text-left){\r\n            Div(panel panel-primary){\r\n                Div(panel-heading, Body: \"Добавить нового участника\")\r\n\r\n                Form(){\r\n                    Div(list-group-item){\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Название\")\r\n                            }\r\n                            Div(col-md-9 mb-sm text-left){\r\n                                Input(Name: Name)\r\n                            }\r\n                        }\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Регистрационный номер\")\r\n                            }\r\n                            Div(col-md-9 mb-sm text-left){\r\n                                Input(Name: Regnum)\r\n                            }\r\n                        }\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Тип участника\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                Data(Source: type_data, Columns: \"type_handler,name\") {\r\n                                producer,Производитель\r\n                                intermediary,Поставщик\r\n                                driller,Нефтяная компания\r\n                                oracle,Оракул\r\n                                }\r\n                                Select(Name: Role, Source: type_data, Class: form-control, NameColumn: name, ValueColumn: type_handler)\r\n                            }\r\n                        }\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Имя участника в сети\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                DBFind(members, pubkey_data).Columns(\"id,member_name\")\r\n                                Select(Name: Pubkey, Source: pubkey_data, Class: form-control, NameColumn: \"member_name\", ValueColumn: \"id\")\r\n                            }\r\n                        }\r\n                        \r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Сопроводительный документ\")\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name: Meta, Type: file)\r\n                            }\r\n                        }\r\n                        Div(panel-footer){\r\n                            Div(clearfix){\r\n                                Div(pull-right){\r\n                                    Button(Body: \"Добавить участника\", Class: btn btn-primary btn-pill-right, Contract: addActor)\r\n                                }\r\n                            }\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "gazprom_starting_page",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(content-wrapper){\r\n    \r\n    Div(row df f-valign){\r\n        Div(col-sm-8 col-sm-offset-2 text-left){\r\n            Div(panel panel-secondary){\r\n                Div(panel-heading, Body: \"Действия\")\r\n                Div(row df f-valign){\r\n                Button(Page: gazprom_create_dig, Body: \"Добавить новый станок\",  Class: btn btn-primary)\r\n                }\r\n                Div(row df f-valign){\r\n                Button(Page: gazprom_create_location, Body: \"Добавить новую локацию\",  Class: btn btn-primary)\r\n                }\r\n                Div(row df f-valign){\r\n                Button(Page: gazprom_create_actor, Body: \"Добавить нового человека\",  Class: btn btn-primary)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "gazprom_create_location",
            "Conditions": "ContractAccess(\"MainCondition\")",
            "Menu": "Applications",
            "Value": "Div(content-wrapper){\r\n\r\n    \r\n    Div(row df f-valign){\r\n        Div(col-sm-8 col-sm-offset-2 text-left){\r\n            Div(panel panel-primary){\r\n                Div(panel-heading, Body: \"Добавить новую локацию\")\r\n\r\n                Form(){\r\n                    Div(list-group-item){\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Адрес\")\r\n                            }\r\n                            Div(col-md-9 mb-sm text-left){\r\n                                InputMap(Name: Location_addr, MapType: hybrid, Type: point)\r\n                            }\r\n                        }\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Тип локации\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                Data(Source: type_data, Columns: \"type_handler,name\"){\r\n                                factory, Завод или склад производителя\r\n                                warehouse, Склад поставщика\r\n                                deposit, Месторождение\r\n                                }\r\n                                Select(Name: Loctype, Source: type_data, Class: form-control, NameColumn: name, ValueColumn: type_handler)\r\n                            }\r\n                        }\r\n                        \r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Сопроводительный документ\")\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name: Meta, Type: file)\r\n                            }\r\n                        }\r\n                        Div(panel-footer){\r\n                            Div(clearfix){\r\n                                Div(pull-right){\r\n\r\n\r\n\r\n                                    DBFind(Name: actors, Source: ddactors).Where(\"pubkey = '#key_id#'\").Vars(instance)\r\n                                    Button(Body: \"Добавить локацию\", Class: btn btn-primary btn-pill-right, Contract: createLocation, Params: \"Loc_Owner_id=#instance_id#\")\r\n                                }\r\n                            }\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        },
        {
            "Name": "gazprom_create_dig",
            "Conditions": "ContractAccess(\"MainAccess\")",
            "Menu": "Applications",
            "Value": "Div(content-wrapper){\r\n\r\n    SetTitle(\"Производитель\")\r\n    \r\n    Div(row df f-valign){\r\n        Div(col-sm-8 col-sm-offset-2 text-left){\r\n            Div(panel panel-primary){\r\n                Div(panel-heading, Body: \"Добавить новое оборудование\")\r\n\r\n                Form(){\r\n                    Div(list-group-item){\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Регистрационный номер\")\r\n                            }\r\n                            Div(col-md-9 mb-sm text-left){\r\n                                Input(Name: Regnum)\r\n                            }\r\n                        }\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Адрес склада\")\r\n                            }\r\n                            Div(col-md-6 mb-sm text-left){\r\n                                DBFind(actors, id_src).Where(\"pubkey = '#key_id#'\").Vars(instance)\r\n                                DBFind(location, location_src).Columns(\"id,address\").Where(\"owner = #instance_id#\")\r\n                                Select(Name: Location_id, Source:location_src, NameColumn: address, ValueColumn: id)\r\n                            }\r\n                            Div(col-md-3 mb-sm text-right){\r\n                                Button(Body: \"Создать локацию\", Class: btn btn-secondary btn-pill-right, Page: gazprom_create_location)\r\n                            }\r\n                        }\r\n                        \r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Техническая документация станка\")\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name: Rig_Meta, Type: file)\r\n                            }\r\n                        }\r\n\r\n                        Div(row df f-valign){\r\n                            Div(col-md-3 mt-sm text-right){\r\n                                Strong(\"Производственная документация\")\r\n                            }\r\n                            Div(col-md-9 mc-sm text-left){\r\n                                Input(Name:  Event_Meta, Type: file)\r\n                            }\r\n                        }   \r\n\r\n                        Div(panel-footer){\r\n                            Div(clearfix){\r\n                                Div(pull-right){\r\n                                    Button(Body: \"Добавить станок\", Class: btn btn-primary btn-pill-right, Contract: produceRig)\r\n                                }\r\n                            }\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
        }
    ],
    "blocks": [
        {
            "Name": "gazprom_events_logs",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Div(Class: content-wrapper){\n \n    Span(Body: \"История операций с оборудованием\", Class: h3)\n\n    DBFind(event, src_events).Custom(cst_initiator){\n        DBFind(actors).WhereId(#initiator_id#).Vars(cur)\n        Span(Class: h5, Body: #cur_name#)\n    }.Custom(cst_type){\n        Span(Class: h5, Body: #type#)\n    }.Custom(cst_date_start){\n        Span(Class: h5, Body: If(#date_start# != NULL){#date_start#})\n    }.Custom(cst_location){\n        DBFind(location).Columns(\"address\").WhereId(#location_end_id#).Vars(cur)\n        Span(Class: h5, Body: #cur_address#)\n    }.Custom(cst_date_end){\n        Span(Class: h5, Body: If(#date_end_actual# != NULL){#date_end_actual#})\n    }.Where(\"rig_id=5\").Order(date_start Desc)\n    \n    Div(Class: panel panel-primary){\n        Form(){\n            \n            Div(Class: list-group-item){\n                Table(src_events, \"Инициатор=cst_initiator,Тип=cst_type,Дата начала=cst_date_start,Дата конца=cst_date_end,Адрес=cst_location\")\n                If(GetVar(isSearch) == 1){\n                    Div(Class: text-center){\n                        Button(Body: $view_all$, Class: btn btn-primary, Page: referendums_list, PageParams: \"isSearch=0\")\n                    }\n                }\n            }\n        }\n    }\n}"
        }
    ],
    "menus": [],
    "parameters": [],
    "languages": [],
    "contracts": [
        {
            "Name": "producerVote",
            "Value": "contract producerVote {\n    data {\n        Malfunction_id int\n        Vote_type int\n    }\n\n    conditions {\n        var Malfunction_data map\n        Malfunction_data = DBRow(\"pending_malfunctions\").WhereId($Malfunction_id)\n        var Caller_data map\n        Caller_data = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        if Malfunction_data[\"producer_id\"] != Caller_data[\"id\"] {\n            error \"Только производитель детали может проголосовать через этот контракт\"\n        }\n    }\n\n    action {\n        if $Vote_type == 0 {\n            var Malfunction_data map\n            Malfunction_data = DBRow(\"pending_malfunctions\").WhereId($Malfunction_id)\n            var current_votes int\n            current_votes = Malfunction_data[\"votes_against\"] + 1\n            DBUpdate(\"pending_malfunctions\", $Malfunction_id, \"votes_against\", current_votes)\n        }\n        else {\n            var Malfunction_data map\n            Malfunction_data = DBRow(\"pending_malfunctions\").WhereId($Malfunction_id)\n            var current_votes int\n            current_votes = Malfunction_data[\"votes_for\"] + 1\n            if current_votes == 2 {\n                DBInsert(\"event\", \"initiator_id,timestamp date_end_actual,location_end_id,rig_id,part_id,meta,type\", Malfunction_data[\"oracle_id\"], Malfunction_data[\"date\"], Malfunction_data[\"location_id\"], Malfunction_data[\"rig_id\"], Malfunction_data[\"part_id\"], Malfunction_data[\"meta\"], \"malfunction\")\n            }\n            DBUpdate(\"pending_malfunctions\", $Malfunction_id, \"votes_for\", current_votes)\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "ownerVote",
            "Value": "contract ownerVote {\n    data {\n        Malfunction_id int\n        Vote_type int\n    }\n\n    conditions {\n        var Malfunction_data map\n        Malfunction_data = DBRow(\"pending_malfunctions\").WhereId($Malfunction_id)\n        var Caller_data map\n        Caller_data = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        if Malfunction_data[\"owner_id\"] != Caller_data[\"id\"] {\n            error \"Только владелец детали может проголосовать через этот контракт\"\n        }\n    }\n\n    action {\n        if $Vote_type == 0 {\n            var Malfunction_data map\n            Malfunction_data = DBRow(\"pending_malfunctions\").WhereId($Malfunction_id)\n            var current_votes int\n            current_votes = Malfunction_data[\"votes_against\"] + 1\n            DBUpdate(\"pending_malfunctions\", $Malfunction_id, \"votes_against\", current_votes)\n        }\n        else {\n            var Malfunction_data map\n            Malfunction_data = DBRow(\"pending_malfunctions\").WhereId($Malfunction_id)\n            var current_votes int\n            current_votes = Malfunction_data[\"votes_for\"] + 1\n            if current_votes == 2 {\n                DBInsert(\"event\", \"initiator_id,timestamp date_end_actual,location_end_id,rig_id,part_id,meta,type\", Malfunction_data[\"oracle_id\"], Malfunction_data[\"date\"], Malfunction_data[\"location_id\"], Malfunction_data[\"rig_id\"], Malfunction_data[\"part_id\"], Malfunction_data[\"meta\"], \"malfunction\")\n            }\n            DBUpdate(\"pending_malfunctions\", $Malfunction_id, \"votes_for\", current_votes)\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "switchPart",
            "Value": "contract switchPart {\n    data {\n        Part_id int\n        New_rig int\n    }\n\n    conditions {\n        /*var Caller_data map\n        Caller_data = DBFind(\"actors\").Where(\"pubkey = ?\", $key_id).Row()\n        var Part_data map\n        Part_data = DBFind(\"part\").Where(\"id = $\", $Part_id).Row()\n        if Part_data[\"producer_id\"] != Caller_data[\"id\"] {\n            error \"Только производитель может посылать очтеты о смене детали\"\n        }*/\n    }\n\n    action {\n        \n       /* if $New_rig == 0 {\n            DBUpdate(\"part\", $Part_id, \"rig_cur,status_cur\", $New_rig, \"uninstalled\")\n        } else {*/\n            DBUpdate(\"part\", 4, \"rig_cur,status_cur\", $New_rig, \"installed\")\n        /*}*/\n        \n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "createPart",
            "Value": "contract createPart {\n    data {\n        Sernum string\n        Meta string \"optional\"\n    }\n    conditions {\n        ContractConditions(\"isProducer\")\n    }\n    action {\n        var Producer_data map        \n        Producer_data = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        DBInsert(\"part\", \"sernum,rig_cur,status_cur,producer_id,meta\", $Sernum, 0, \"uninstalled\", Producer_data[\"id\"], $Meta)\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "finishMove",
            "Value": "contract finishMove {\n    data {\n        event_id int\n    }\n\n    conditions {\n    \n        var Chosen_event map\n        Chosen_event = DBRow(\"event\").Where(\"id = ?\", $event_id)\n        var Caller_data map\n        Caller_data = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        var Caller_id int\n        Caller_id = Caller_data[\"id\"]\n        if Chosen_event[\"initiator_id\"] != Caller_id || Chosen_event[\"type\"] != \"move_start\" {\n            error \"You cannot finish this event\"\n        }\n       \n    }\n\n     action {       \n        var Chosen_event map\n        Chosen_event = DBRow(\"event\").Where(\"id = ?\", $event_id) \n        var Target_rig_id int\n        Target_rig_id = Int(Chosen_event[\"rig_id\"])\n        DBUpdate(\"rigs\", Target_rig_id, \"location_cur\", Chosen_event[\"location_end_id\"])\n        DBUpdate(\"rigs\", Target_rig_id, \"status_cur\", \"standby\")\n        DBUpdate(\"event\", $event_id, \"timestamp date_end_actual\", $time)\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "finisherAccess",
            "Value": "contract finisherAccess {\n    conditions {\n        if !ContractAccess(\"finishDig\") && !ContractAccess(\"finishMove\") {\n            error \"Only finishing contracts can finish events\"\n        }\n    }\n\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "finishDig",
            "Value": "contract finishDig {\n    data {\n        event_id int\n    }\n\n    conditions {\n    \n        var Chosen_event map\n        Chosen_event = DBRow(\"event\").Where(\"id = ?\", $event_id)\n        var Caller_data map\n        Caller_data = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        var Caller_id int\n        Caller_id = Caller_data[\"id\"]\n        if Chosen_event[\"receiver_id\"] != Caller_id || Chosen_event[\"type\"] != \"dig_start\" {\n            error \"You cannot finish this event\"\n        }\n       \n    }\n\n    action {\n        DBUpdate(\"event\", $event_id, \"timestamp date_end_actual\", $time)\n        var Chosen_event map\n        Chosen_event = DBRow(\"event\").Where(\"id = ?\", $event_id)\n        var Target_rig_id int\n        Target_rig_id = Int(Chosen_event[\"rig_id\"])\n        DBUpdate(\"rigs\", Target_rig_id, \"status_cur\", \"standby\")\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "eventAccess",
            "Value": "contract eventAccess {\n    data {\n\n    }\n\n    conditions {\n        if !ContractAccess(\"moveRig\") && !ContractAccess(\"reportMalfunction\") && !ContractAccess(\"reportMaintenance\") && !ContractAccess(\"startDig\") && !ContractAccess(\"produceRig\") && !ContractAccess(\"changeOwnership\") {\n            error \"Only event contracts can create new events.\"\n        }\n    }\n\n    action {\n\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "moveRig",
            "Value": "contract moveRig {\n    data {\n        Date_finish string\n        Location_id_finish int\n        Rig_id int\n        Event_meta string \"optional\"\n    }\n\n    conditions {\n        var Mover_data map\n        Mover_data = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        var Rig_data map\n        Rig_data = DBRow(\"rigs\").WhereId($Rig_id)\n        if Rig_data[\"owner_cur\"] != Mover_data[\"id\"] {\n            error \"Вы не владелец станка\"\n        }\n        if Rig_data[\"status_cur\"] != \"standby\" {\n            error \"Станок уже чем-то занят\"\n        }\n    }\n\n    action {\n        var Mover_data map\n        Mover_data = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        var Rig_data map\n        Rig_data = DBRow(\"rigs\").WhereId($Rig_id)\n        DBInsert(\"event\", \"initiator_id,timestamp date_start,date_end_planned,location_start_id,location_end_id,rig_id,meta,type\", Mover_data[\"id\"], $time, \"timestamp \" + $Date_finish, Rig_data[\"location_cur\"], $Location_id_finish, $Rig_id, $Event_meta, \"move_start\")\n        DBUpdate(\"rigs\", $Rig_id, \"status_cur\", \"moving\")\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "createLocation",
            "Value": "contract createLocation {\n        func checkType(Loctype string) {\n            if Loctype == \"factory\" {\n                //ContractConditions(\"isProducer\")\n            }\n            if Loctype == \"warehouse\" {\n            }\n            if Loctype == \"deposit\" {\n                //ContractConditions(\"isDriller\")\n            }\n        }\n\n    data {\n        Location_addr string\n        Loc_Owner_id string\n        Loctype string\n        Meta string \"optional\"\n    }\n\n    conditions {\n        if $Loctype != \"factory\" && $Loctype != \"warehouse\" && $Loctype != \"deposit\" {\n            warning \"Incorrect Type\"\n        }\n        checkType($Loctype)\n    }\n    action {\n        var Dict map\n        Dict = JSONToMap($Location_addr)\n        DBInsert(\"location\", \"location,owner,type,meta,address\", $Location_addr, $Loc_Owner_id, $Loctype, $Meta, Dict[\"address\"])\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "addActor",
            "Value": "contract addActor {\n    data {\n        Name string\n        Regnum string\n        Role string\n        Pubkey address\n        Meta string \"optional\"      \n    }\n\n    conditions {\n\n        ContractConditions(\"MainCondition\")\n        func checkRole(Role string) bool {\n            if Role == \"producer\" {\n                return true\n            }\n            if Role == \"intermediary\" {\n                return true\n            }\n            if Role == \"driller\" {\n                return true\n            }\n            if Role == \"oracle\" {\n                return true\n            }\n            return false\n        }\n\n        if !checkRole($Role) {\n            error \"Incorrect role\"\n        }\n    }\n\n    action {      \n        DBInsert(\"actors\", \"name,regnum,pubkey,role,meta\", $Name, $Regnum, $Pubkey, $Role, $Meta)\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "reportMalfunction",
            "Value": "contract reportMalfunction {\n    data {\n        Part_id int\n        Event_meta string \"optional\"\n    }\n    conditions {\n    /*\n        var Caller_data map\n        Caller_data = DBFind(\"actors\").Where(\"pubkey = ? and role = 'oracle'\", $key_id).Row()\n        var Caller_id int\n        Caller_id = Caller_data[\"id\"]\n        if Len(Caller_id) < 1 {\n            error \"Только оракулы могут посылать отчеты о поломках\"\n        }\n        */\n    }\n    action {\n        var Caller_data map\n        Caller_data = DBFind(\"actors\").Where(\"pubkey = ?\", $key_id).Row()\n        var Caller_id int\n        Caller_id = Caller_data[\"id\"]\n        var Part_data map\n        Part_data = DBRow(\"part\").WhereId($Part_id)\n        if Part_data[\"rig_cur\"] == 0 {\n            DBInsert(\"pending_malfunctions\", \"oracle_id,owner_id,producer_id,timestamp date,part_id,meta,votes_for,votes_against\", Caller_id, Part_data[\"producer_id\"], Part_data[\"producer_id\"], $time, 4, $Event_meta, 1, 0)\n        }\n        else {\n            var Rig_data map\n            Rig_data = DBRow(\"rigs\").WhereId(5)\n            DBInsert(\"pending_malfunctions\", \"oracle_id,owner_id,producer_id,timestamp date,location_id,rig_id,part_id,meta,votes_for,votes_against\", Caller_id, Rig_data[\"owner_cur\"], Part_data[\"producer_id\"], $time, Rig_data[\"location_cur\"], Rig_data[\"id\"], 4, $Event_meta, 1, 0)\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "reportMaintenance",
            "Value": "contract reportMaintenance {\n    data {\n        Part_id int\n        Event_meta string \"optional\"\n    }\n    conditions {\n        var Caller_data map\n        Caller_data = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        var Part_data map\n        Part_data = DBRow(\"part\").WhereId($Part_id)\n        if Part_data[\"producer_id\"] != Caller_data[\"id\"] {\n            error \"Только производитель может посылать очтеты о ТО детали\"\n        }\n    }\n    action {\n        \n        var Caller_data map\n        Caller_data = DBFind(\"actors\").Where(\"pubkey = ?\", $key_id).Row()\n        var Part_data map\n        Part_data = DBFind(\"part\").WhereId($Part_id).Row()\n        var Rig_id int\n        Rig_id = Part_data[\"rig_cur\"]\n        if Rig_id == 0 {\n            DBInsert(\"event\", \"initiator_id,timestamp date_end_actual,part_id,meta,type\", Caller_data[\"id\"], $time, $Part_id, $Event_meta, \"maintenance_performed\")\n        }\n        else {\n            var Rig_data map\n            Rig_data = DBFind(\"rigs\").WhereId(Rig_id).Row()\n            DBInsert(\"event\", \"initiator_id,timestamp date_end_actual,location_end_id,rig_id,part_id,meta,type\", Caller_data[\"id\"], $time, Rig_data[\"location_cur\"], Rig_id, $Part_id, $Event_meta, \"maintenance_performed\")\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "startDig",
            "Value": "contract startDig {\n    data {\n        Date_finish string\n        Rig_id int\n        Event_meta string \"optional\"\n    }\n    conditions {\n        /*ContractConditions(\"isDriller\")\n        var Driller_id int\n        Driller_id = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        var Rig_data map\n        Rig_data = DBRow(\"rigs\").WhereId($Rig_id)\n        if Rig_data[\"status_cur\"] != \"standby\" {\n            error \"Этот станок сейчас занят\"\n        }\n        var Location_data map\n        Location_data = DBRow(\"location\").Where(\"id = ?\", Rig_data[\"location_cur\"])\n        if Location_data[\"type\"] != \"deposit\"{\n            error \"Этот станок не находится на месторождении\"\n        }*/\n    }\n    action {\n        var Driller_data map\n        Driller_data = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        var Driller_id int\n        Driller_id = Driller_data[\"id\"]\n        var Rig_data map\n        Rig_data = DBRow(\"rigs\").WhereId($Rig_id)\n        var Interm_id int\n        Interm_id = Rig_data[\"owner_cur\"]\n        DBInsert(\"event\", \"initiator_id,receiver_id,timestamp date_start,date_end_planned,location_end_id,rig_id,meta,type\", Driller_id, Interm_id, $time, \"timestamp \" + $Date_finish, Rig_data[\"location_cur\"], $Rig_id, $Event_meta, \"dig_start\")\n        DBUpdate(\"rigs\", $Rig_id, \"status_cur\", \"digging\")\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "isDriller",
            "Value": "contract isDriller {\n    conditions {\n        var ret array\n        ret = DBFind(\"actors\").Where(\"role = 'driller' and id = ?\", $key_id)\n        if Len(ret) < 1 {\n            error \"You do not have access to this action\"\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "produceRig",
            "Value": "contract produceRig {\n    data {\n        Location_id int\n        Regnum string\n        Rig_meta string \"optional\"\n        Event_meta string \"optional\"\n    }\n    conditions {\n        ContractConditions(\"isProducer\")\n    }\n    action {\n        var Res map\n        Res = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        var Producer_id int\n        Producer_id = Res[\"id\"]\n        var New_id int\n        New_id = DBInsert(\"rigs\", \"regnum,owner_cur,status_cur,location_cur,meta\", $Regnum, Producer_id, \"standby\", $Location_id, $Rig_meta)\n        DBInsert(\"event\", \"initiator_id,timestamp date_end_actual,location_end_id,rig_id,meta,type\", Producer_id, $time, $Location_id, New_id, $Event_meta, \"produced\")\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "changeOwnership",
            "Value": "contract changeOwnership {\n    data {\n        Rig_id int\n        New_owner int\n        Event_meta string \"optional\"\n    }\n    conditions {\n        var Caller_data map\n        Caller_data = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)\n        var Caller_id int\n        Caller_id = Caller_data[\"id\"]\n        var Rig_data map\n        Rig_data = DBRow(\"rigs\").WhereId($Rig_id)\n        if Rig_data[\"owner_cur\"] != Caller_id {\n            error \"You are not the owner\"\n        }\n    }\n    action {\n        var Rig_data map\n        Rig_data = DBRow(\"rigs\").WhereId($Rig_id)\n        DBInsert(\"event\", \"initiator_id,receiver_id,timestamp date_end_actual,location_end_id,rig_id,meta,type\", Rig_data[\"owner_cur\"], $New_owner, $time, Rig_data[\"location_cur\"], $Rig_id, $Event_meta, \"sold\")\n        DBUpdate(\"rigs\", $Rig_id, \"owner_cur\", $New_owner)\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "isOwner",
            "Value": "contract isOwner {\n    data {\n        rig_id int\n    }\n    conditions {\n        var ret array\n        var owner_id int\n        owner_id = DBRow(\"actors\").Where(\"pubkey = ?\", $key_id)[\"id\"]\n        ret = DBFind(\"rigs\").Where(\"owner_cur = ? and id = ?\", $owner_id, $rig_id)\n        if Len(ret) < 1 {\n            error \"You do not have access to this action\"\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        },
        {
            "Name": "isProducer",
            "Value": "contract isProducer {\n    conditions {\n        var ret array\n        ret = DBFind(\"actors\").Where(\"role = 'producer' and pubkey = ?\", $key_id)\n        if Len(ret) < 1 {\n            error \"You do not have access to this action\"\n        }\n    }\n}",
            "Conditions": "ContractAccess(\"MainCondition\")"
        }
    ],
    "tables": [
        {
            "Name": "actors",
            "Columns": "[{\"name\":\"meta\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"role\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"pubkey\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"regnum\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"location\",\"type\":\"number\",\"conditions\":\"false\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"MainCondition\\\")\",\"update\":\"ContractConditions(\\\"MainCondition\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Name": "event",
            "Columns": "[{\"name\":\"rig_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"receiver_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"meta\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"type\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"initiator_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_end_actual\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"location_end_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_end_planned\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"location_start_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"part_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_start\",\"type\":\"datetime\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"eventAccess\\\")\",\"update\":\"ContractConditions(\\\"finisherAccess\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Name": "location",
            "Columns": "[{\"name\":\"address\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"location\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"meta\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"type\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"owner\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"MainCondition\\\")\",\"update\":\"ContractConditions(\\\"MainCondition\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Name": "part",
            "Columns": "[{\"name\":\"meta\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"sernum\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"rig_cur\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"status_cur\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"producer_id\",\"type\":\"number\",\"conditions\":\"false\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"createPart\\\")\",\"update\":\"ContractConditions(\\\"switchPart\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Name": "pending_malfunctions",
            "Columns": "[{\"name\":\"meta\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"rig_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"producer_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"votes_against\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"part_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"owner_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"oracle_id\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"votes_for\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"location_id\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"ContractAccess(\\\"reportMalfunction\\\")\",\"update\":\"ContractAccess(\\\"ownerVote\\\") || ContractAccess(\\\"producerVote\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Name": "rigs",
            "Columns": "[{\"name\":\"status_cur\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"location_cur\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"finishMove\\\")\"},{\"name\":\"meta\",\"type\":\"bytea\",\"conditions\":\"true\"},{\"name\":\"regnum\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"owner_cur\",\"type\":\"number\",\"conditions\":\"ContractAccess(\\\"changeOwnership\\\")\"}]",
            "Permissions": "{\"insert\":\"ContractAccess(\\\"produceRig\\\")\",\"update\":\"true\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        }
    ],
    "data": []
}